class Solution {
public:
    vector<int> grayCode(int n) { //对于n时的结果，相当于是n-1时的结果按照中心对称轴做一次镜像，然后在前半部分的前面填上0，后半部分填1
        vector<int> result(1<<n,0);
        if(n==0)
        {
            return result;
        }
        else
        {
            for(int i=1;i<=n;i++) //填写后n-1位
            {
                for(int j=(1<<i-1);j<(1<<i);j++) //填写最前面的一位
                {
                    result[j]+=(1<<(i-1));
                }
                if(i<n) //还需要做镜像及复制操作
                {
                    for(int j=0;j<(1<<i-1);j++) //镜像
                    {
                        result[(1<<i)+j]=result[(1<<i)-j-1];
                    }
                    if(i<n-1)
                    {
                        for(int j=0;j<(1<<(n-i-1));j+=(1<<i+1)) //复制
                        {
                            for(int k=0;k<(1<<i+1);k++)
                            {
                                result[j+k+(1<<i+1)]=result[j+k];
                            }
                        }                        
                    }
                }
            }
        }
        return result;
    }
};
