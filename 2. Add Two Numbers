/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* result=new ListNode(0);
        ListNode* return_val=result;
        bool is_carry_bit=0;
        while(l1&&l2)
        {
            int digit_add_result=l1->val+l2->val+result->val;
            if(digit_add_result<=9)
            {
                result->val=digit_add_result;
                is_carry_bit=0;
            }
            else
            {
               result->val=digit_add_result-10;
                is_carry_bit=1;
            }
            l1=l1->next;
            l2=l2->next;
            if(l1&&l2)
            {
                result->next=new ListNode(is_carry_bit);
                result=result->next;
            }
        }
        if(l1)
        {
            while(l1)
            {
                result->next=new ListNode(is_carry_bit);
                result=result->next;
                int digit_add_result=l1->val+result->val;
                if(digit_add_result<=9)
                {
                    result->val=digit_add_result;
                    is_carry_bit=0;
                }
                else
                {
                    result->val=digit_add_result-10;
                    is_carry_bit=1;
                }
                l1=l1->next;  
            }
        }
        else if(l2)
        {
            while(l2)
            {
                result->next=new ListNode(is_carry_bit);
                result=result->next;
                int digit_add_result=l2->val+result->val;
                if(digit_add_result<=9)
                {
                    result->val=digit_add_result;
                    is_carry_bit=0;
                }
                else
                {
                    result->val=digit_add_result-10;
                    is_carry_bit=1;
                }
                l2=l2->next;  
            }
        }
        if(is_carry_bit)
        {
            result->next=new ListNode(1);
        }
        return return_val;
    }
};
