class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        std::sort(nums.begin(),nums.end());
        int size=nums.size();
        int add_result=0;
        for(int i=0;i<size-1;i++)
        {
            int target=-nums[i];
            int j=i+1;
            int k=size-1;
            while(j<k)
            {
                add_result=nums[j]+nums[k]; //calculate the add result first in order to save time
                if(add_result==target)
                {
                    result.push_back(std::vector<int>{nums[i],nums[j],nums[k]});
                    while(j<=size-1&&nums[j]==nums[j+1])
                    {
                        j++;
                    }
                    j++;
                    while(k>i&&nums[k-1]==nums[k])
                    {
                        k--;
                    }
                    k--;
                }
                else if(add_result>target)
                {
                    k--;
                }
                else
                {
                    j++;
                }
            }
            while(i!=size-1&&nums[i+1]==nums[i])
            {
                i++;
            }
        }
        return result;
    }
};
