class Solution {
public:
    string largestNumber(vector<int>& nums) {
        //将nums进行排序，排序的规则为：将两个数字前后相接组成一个新的数字，然后判断两种接法的大小
        if(!nums.size())
        {
            return string("");
        }
        sort(nums.begin(),nums.end(),[](int a,int b)
             {
                 if(a==0)
                 {
                     return false;
                 }
                 if(b==0)
                 {
                     return true;
                 }
                 long ab=a*(pow(10,(int)log10(b)+1))+b;
                 long ba=b*(pow(10,(int)log10(a)+1))+a;
                 return ab>ba;
             });
        string result;
        if(nums[0]==0)
        {
            return string("0");
        }
        for(auto num:nums)
        {
            result+=to_string(num);
        }
        return result;
    }
};
