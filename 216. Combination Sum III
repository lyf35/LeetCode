class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        //使用k个数加到n，只能使用1-9中的数字且不能重复
        vector<vector<int>> result;
        if(k>10||n>55) //对于这两种情况，无论如何也无法构成一个组合，可以直接返回
        {
            return result;
        }
        vector<int> one_result;
        dfs(result,one_result,k,n);
        return result;
    }
    void dfs(vector<vector<int>>& result,vector<int>& one_result,int k,int n)
    {
        if(k==0&&n==0)
        {
            result.push_back(one_result);
        }
        else if(k<=0||n<=0)
        {
            return;
        }
        else
        {
            //把循环放在函数内部，否则结果会有重复
            for(int next_pos=one_result.size()==0?1:one_result.back()+1;next_pos<10;next_pos++)
            {
                one_result.push_back(next_pos);
                dfs(result,one_result,k-1,n-next_pos);
                one_result.pop_back();
            }
        }
    }
};
