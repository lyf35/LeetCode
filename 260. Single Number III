class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        //可以先对nums做基数排序，然后从前到后遍历即可，但是这样会使用O(n)的额外空间
        //如果要使用常数大小的空间，需要使用异或运算做帮助。
        int aXorb = 0;  // the result of a xor b;
        for (auto item : nums) aXorb ^= item;
        //本题的最核心代码就在这一行处
        int lastBit =aXorb & (-aXorb);  // the last bit that a diffs b
        int intA = 0, intB = 0;
        for (auto item : nums) 
        {
        // based on the last bit, group the items into groupA(include a) and groupB
            if (item & lastBit) intA = intA ^ item;
            else intB = intB ^ item;
        }
        return vector<int>{intA, intB};   
    }
};
