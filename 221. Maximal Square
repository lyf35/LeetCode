class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int max_val=0;
        if(!matrix.size()||!matrix.begin()->size()) 
        {
            return 0;
        }
        int columns=matrix.begin()->size();
        vector<int> height(columns,0);
        for(int i=0;i<matrix.size();i++)
        {
            vector<int> temp(columns,0);
            for(int j=0;j<columns;j++)
            {
                temp[j]=matrix[i][j]=='1'? height[j]+1:0;
            }
            for(int j=0;j<columns;j++) 
            {
                if(temp[j])
                {
                    int former=j;
                    int latter=j;
                    while(former>=0&&temp[former]>=temp[j]) former--;
                    while(latter<columns&&temp[latter]>=temp[j]) latter++;
                    max_val=max(max_val,(int)pow(min((latter-former-1),temp[j]),2));
                }
            }
            height=temp;
        }
        return max_val;
    }
};
